# Generated by Django 5.0.9 on 2024-10-23 19:43

from django.db import migrations, models
from django_mail_admin.transports.imap import ImapTransport
from dateutil import parser
import dateparser

def populate_sent_datetime(apps, schema_editor):
    # Import the model using the historical model `apps.get_model`
    IncomingEmail = apps.get_model('django_mail_admin', 'IncomingEmail')

    for mail_obj in IncomingEmail.objects.all():
        try:
            message_contents = mail_obj.eml.read()
            msg = ImapTransport('').get_email_from_bytes(message_contents)  # assuming message_contents is needed here
            date = msg['Date']
            if date:
                sent_datetime = parser.parse(date)
                if sent_datetime is None:
                    sent_datetime = dateparser.parse(date)
                mail_obj.sent_datetime = sent_datetime
                mail_obj.save()
        except Exception as e:
            print(f"Error updating mail_obj {mail_obj.id}: {e}")
            mail_obj.sent_datetime = mail_obj.processed
            mail_obj.save()
            continue


class Migration(migrations.Migration):

    dependencies = [
        ('django_mail_admin', '0004_auto_20240827_1530'),
    ]

    operations = [
        migrations.AddField(
            model_name='incomingemail',
            name='sent_datetime',
            field=models.DateTimeField(blank=True, null=True, verbose_name='Sent datetime'),
        ),
        migrations.RunPython(populate_sent_datetime),
    ]
