"""
Django settings for example project.

Generated by Cookiecutter Django Package

For more information on this file, see
https://docs.djangoproject.com/en/1.9/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.9/ref/settings/
"""

import os
from decouple import config

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.9/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "pppppppppppppppppppppppppppppppppppppppppppppppppp"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["*"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django_mail_admin",
    # if your app has other dependencies that need to be added to the site
    # they should be added here
    "sslserver",
    "social_django",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "example.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "social_django.context_processors.backends",
                "social_django.context_processors.login_redirect",
            ],
        },
    },
]

WSGI_APPLICATION = "example.wsgi.application"

# Database
# https://docs.djangoproject.com/en/1.9/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}

# Password validation
# https://docs.djangoproject.com/en/1.9/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# Internationalization
# https://docs.djangoproject.com/en/1.9/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.9/howto/static-files/

STATIC_URL = "/static/"
MEDIA_URL = "/media/"
INSTALLED_APPS += ("django_admin_row_actions",)

DJANGO_MAIL_ADMIN = {
    "BACKENDS": {
        "default": "django_mail_admin.backends.GmailOAuth2Backend",  #'django_mail_admin.backends.CustomEmailBackend',
        "smtp": "django.core.mail.backends.smtp.EmailBackend",
        "o365": "django_mail_admin.backends.O365Backend",
        "gmail": "django_mail_admin.backends.GmailOAuth2Backend",
    }
}
AUTHENTICATION_BACKENDS = (
    "social_core.backends.google.GoogleOAuth2",
    "django.contrib.auth.backends.ModelBackend",
)

SOCIAL_AUTH_GOOGLE_OAUTH2 = "abc"
SOCIAL_AUTH_GOOGLE_OAUTH2_LOGIN_REDIRECT_URL = "/example/mailbox"
# Google Keys
SOCIAL_AUTH_GOOGLE_OAUTH2_KEY = config("SOCIAL_AUTH_GOOGLE_OAUTH2_KEY")  # Client: ID
SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET = config(
    "SOCIAL_AUTH_GOOGLE_OAUTH2_SECRET"
)  # Client: Secret
SOCIAL_AUTH_GOOGLE_OAUTH2_SCOPE = [
    "https://www.googleapis.com/auth/userinfo.email",
    "https://www.googleapis.com/auth/userinfo.profile",
    "https://mail.google.com/",
]
SOCIAL_AUTH_GOOGLE_OAUTH2_AUTH_EXTRA_ARGUMENTS = {
    "access_type": "offline",
    "approval_prompt": "auto",
}

O365_ADMIN_SETTINGS = {
    "TOKEN_BACKEND": "FileSystemTokenBackend",  # "AZBlobStorageTokenBackend"
}

EXAMPLE_O365_ADMIN_SETTINGS = {
    "TOKEN_BACKEND": "AZBlobStorageTokenBackend",  # "FileSystemTokenBackend"
    "O365_CLIENT_ID": config("O365_CLIENT_ID"),
    "O365_CLIENT_SECRET": config("O365_CLIENT_SECRET"),
    "O365_AUTH_BACKEND_AZ_BLOB_NAME": config("O365_AUTH_BACKEND_AZ_BLOB_NAME"),
    "O365_AUTH_BACKEND_AZ_CONNECTION_STR": config(
        "O365_AUTH_BACKEND_AZ_CONNECTION_STR"
    ),
    "O365_AUTH_BACKEND_AZ_CONTAINER_PATH": config(
        "O365_AUTH_BACKEND_AZ_CONTAINER_PATH"
    ),
}

O365_CLIENT_APP_SETTINGS = {
    "example_client_app1": {
        # TBD certificate support
        "auth": "token_secret",  #'certificate'
        "TOKEN_BACKEND": "AZBlobStorageTokenBackend",
        "O365_CLIENT_ID": config("O365_CLIENT_ID"),
        "O365_CLIENT_SECRET": config("O365_CLIENT_SECRET"),
    },
}

O365_TOKEN_BACKENDS = {
    "FileSystemTokenBackend": {
        "O365_AUTH_BACKEND_TOKEN_DIR": config("O365_AUTH_BACKEND_TOKEN_DIR"),
        "O365_AUTH_BACKEND_TOKEN_FILE": config("O365_AUTH_BACKEND_TOKEN_FILE"),
    },
    "AZBlobStorageTokenBackend": {
        "O365_AUTH_BACKEND_AZ_BLOB_NAME": config("O365_AUTH_BACKEND_AZ_BLOB_NAME"),
        "O365_AUTH_BACKEND_AZ_CONTAINER_PATH": config(
            "O365_AUTH_BACKEND_AZ_CONTAINER_PATH"
        ),
        "O365_AUTH_BACKEND_AZ_CONNECTION_STR": config(
            "O365_AUTH_BACKEND_AZ_CONNECTION_STR"
        ),
    },
}
